<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.2.xsd 
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 配置控制器所在包，将扫描该包下所有带有Controller注解的类作为spring-mvc的控制器 -->
	<context:component-scan base-package="team.ryunosuke.web.ssm_web_base.controller"></context:component-scan>
	
	<!-- 最基本的Spring对象管理方法，但近年更流行通过注解方式管理，以节省大量配置文件 -->
    <bean id="bean_a" class="team.ryunosuke.web.ssm_web_base.beans.SimpleBeanA">
        <property name="beanName" value="FromApplicationFile"></property>
    </bean>
    
    <!-- 加入该标签以支持注解方式管理bean -->
    <context:annotation-config></context:annotation-config>
    <!-- 加入该标签以配置扫描指定包下的类注解，否则Spring无法扫描到注解 -->
    <context:component-scan base-package="team.ryunosuke.web.ssm_web_base.beans"></context:component-scan>
    <context:component-scan base-package="team.ryunosuke.web.ssm_web_base.aop"></context:component-scan>
    
    <!-- 加入该标签以支持AOP特性  -->
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	
	
	<!-- SpringMVC拦截器 -->
	<mvc:interceptors>
		<!-- 检查用户权限，对于部分不需要权限的路径进行排除 -->
		<mvc:interceptor>
			<!-- 先匹配所有路径，然后排除不需要检查的路径 -->
			<mvc:mapping path="/**" />
			<!-- 与登录相关的请求 -->
			<mvc:exclude-mapping path="/index.jsp" />
			<!-- 以下是静态资源 -->
			<mvc:exclude-mapping path="/img/**" />
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/bootstrap/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/My97DatePicker/**" />
			<mvc:exclude-mapping path="/ueditorFile/**" />
			
			<!-- 客户端文件上传下载，不使用该校验 -->
			<!-- <mvc:exclude-mapping path="/download/**" /> 
			<mvc:exclude-mapping path="/upload/**" /> -->
			<!-- 用户是否已经登录的检查 -->
			<bean class="team.ryunosuke.web.ssm_web_base.beans.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>